plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	lombok_version = "1.18.36"
	mapstruct_version = "1.6.3"
	cryto_version = "6.4.1"
	openapi_webmvc_version = "2.6.0"
	mail_version = "3.4.0"
	redis_version = "3.4.0"
	lettuce_version = "6.5.0.RELEASE"
	kafka_version = "3.3.0"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation "org.mapstruct:mapstruct:${mapstruct_version}"
//	implementation 'org.liquibase:liquibase-core'
	implementation "org.springframework.security:spring-security-crypto:${cryto_version}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openapi_webmvc_version}"
	implementation "org.springframework.boot:spring-boot-starter-mail:${mail_version}"
	implementation "org.springframework.boot:spring-boot-starter-data-redis:${redis_version}"
	implementation "io.lettuce:lettuce-core:${lettuce_version}"
	implementation "org.springframework.kafka:spring-kafka:${kafka_version}"

	compileOnly "org.projectlombok:lombok:${lombok_version}"
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor "org.projectlombok:lombok:${lombok_version}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly "org.projectlombok:lombok:${lombok_version}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombok_version}"
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
		indentWithTabs(4)
		palantirJavaFormat()
		importOrder('java', 'jakarta', 'org', 'com', 'com.diffplug')
	}
}

tasks.named('compileJava') {
	dependsOn 'spotlessCheck'
}
